#!/bin/bash

doit() {
  printf "** $*"
  LAST=${@: -1}

  start=`perl -MTime::HiRes=time -e 'printf "%.9f\n", time'`
  ./doit $* > logs/${LAST}.log 2>&1
  RESULT=$?
  end=`perl -MTime::HiRes=time -e 'printf "%.9f\n", time'`

  if [ $RESULT -eq 0 ] ; then
    printf ' \e[32mOK\e[0m'
  elif [ $RESULT -eq 10 ] ; then
    printf ' \e[31mREFUTED\e[0m'
  else
    printf ' \e[1;31mERROR\e[0m'
  fi

  runtime=$( echo "$end - $start" | bc -l )
  printf " %f" $runtime

  printf '\n'
}

skip() {
  printf "** $*"
  printf ' \e[37mSKIPPED\e[0m'
  printf '\n'
}

if [ ! -e logs/. ] ; then mkdir logs ; fi

doit source/core_json.c --contract JSON_Iterate
doit source/core_json.c --contract JSON_SearchConst
doit source/core_json.c --contract JSON_SearchT
doit source/core_json.c --contract JSON_Validate
doit source/core_json.c --contract arraySearch
doit source/core_json.c --contract countHighBits
doit source/core_json.c --contract iterate
skip source/core_json.c --contract multiSearch POSTCONDITION
skip source/core_json.c --contract nextKeyValuePair POSTCONDITION
doit source/core_json.c --contract nextValue
skip source/core_json.c --contract objectSearch POSTCONDITION
doit source/core_json.c --contract skipArrayScalars
doit source/core_json.c --contract skipAnyLiteral
doit source/core_json.c --contract skipCollection
doit source/core_json.c --contract skipExponent
doit source/core_json.c --contract skipDecimals
doit source/core_json.c --contract skipDigits
doit source/core_json.c --contract skipEscape
doit source/core_json.c --contract skipHexEscape
doit source/core_json.c --contract skipNumber
doit source/core_json.c --contract skipOneHexEscape
doit source/core_json.c --contract skipQueryPart
doit source/core_json.c --contract skipScalars
doit source/core_json.c --contract skipSpace
doit source/core_json.c --contract skipSpaceAndComma
doit source/core_json.c --contract skipString
doit source/core_json.c --contract skipUTF8
doit source/core_json.c --contract skipUTF8MultiByte
doit source/core_json.c --contract shortestUTF8
doit source/core_json.c --contract strnEq
